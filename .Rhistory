pacman::p_load(ggplot2, tidyr, dplyr)
pacman::p_load(neonUtilities)
?p_load
pacman::p_load(neonUtilities)
pacman::p_load(neonUtilities, tidyverse, sf, terra, data.table)
?zipsByProduct
pacman::p_load(neonUtilities, neonOS, tidyverse, sf, terra, data.table)
# Set global option to NOT convert all character variables to factors
options(stringsAsFactors=F)
# load catalog
catalog <- read.csv("/data/Ecosystem_Data.csv")
# load catalog
catalog <- read.csv("data/Ecosystem_Data.csv")
# load catalog
catalog <- read.csv("~data/Ecosystem_Data.csv")
# load catalog
catalog <- read.csv("ECOL592/data/Ecosystem_Data.csv")
# load catalog
catalog <- read.csv("~ECOL592/data/Ecosystem_Data.csv")
# load catalog
catalog <- read.csv("/ECOL592/data/Ecosystem_Data.csv")
zipsByProduct(
DP1.10003.001,
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = NA,
load = F,
token = NA_character_,
avg = NA
)
zipsByProduct(
"DP1.10003.001",
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = NA,
load = F,
token = NA_character_,
avg = NA
)
zipsByProduct(
"DP1.10003.001",
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = NA,
load = F,
token = NA_character_,
avg = NA
)
zipsByProduct(
"DP1.10003.001",
site = c("NIWO", "RNMP"),
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = NA,
load = F,
token = NA_character_,
avg = NA
)
# load catalog
catalog <- read.csv(ECOL592/data/Ecosystem_Data.csv)
# load catalog
catalog <- read.csv(data/Ecosystem_Data.csv)
getwd()
# load catalog
catalog <- read.csv("data/Ecosystem_Data.csv")
# load catalog
catalog <- read.csv("data/Ecosystem_Data.csv")
# load catalog
list.files()
# load catalog
list.files("data/")
# load catalog
read.csv("data/Ecosystem_Data.csv")
# load catalog
read.csv("/data/Ecosystem_Data.csv")
# load catalog
read.csv("~data/Ecosystem_Data.csv")
# load catalog
read.csv("./data/Ecosystem_Data.csv")
# load catalog
read.csv("./data/Ecosystem_Data.csv")
# load catalog
read.csv("./data/Ecosystem_Data.csv")
# load catalog
read.csv("./data/Ecosystem_Data.csv")
# load catalog
read.csv("data/Ecosystem_Data.csv")
# load catalog
read.csv("data/Ecosystem_Data.csv")
# Set global option to NOT convert all character variables to factors
options(stringsAsFactors=F)
# load catalog
read.csv("data/Ecosystem_Data.csv")
pacman::p_load(neonUtilities, neonOS, tidyverse, sf, terra, data.table)
# load catalog
read.csv("data/Ecosystem_Data.csv")
# load catalog
read.csv("data/eco.csv")
# load catalog
read.csv("data/eco.csv", check.names = F)
# load catalog
read.csv("data/eco.csv")
# load catalog
read.csv("data/eco.csv")
# load catalog
read.csv("data/eco.csv")
# load catalog
eco_data <- read.csv("data/eco.csv")
head(eco_data)
zipsByProduct(
eco_data$datatest[1,],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = NA,
load = F,
token = NA_character_,
avg = NA
)
eco_data$datatest[1,]
eco_data$datatest[1]
zipsByProduct(
eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = NA,
load = F,
token = NA_character_,
avg = NA
)
################################################################################
# Data Pathway
################################################################################
path.data <- "data/catalog"
# load catalog
eco_data <- read.csv("data/eco.csv")
head(eco_data)
zipsByProduct(
eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
?zipsByProduct
zipsByProduct(
eco_data$datatest[1],
site = "all",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
zipsByProduct(
eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
); y
head(eco_data)
# load catalog
eco_data <- read.csv("data/eco.csv")
head(eco_data)
# view catalog
list.files(path.data)
pacman::p_load(neonUtilities, neonOS, tidyverse, sf, terra, data.table, glue)
# view catalog
list.files(glue(path.data, "filesToStack10003"))
# load catalog
eco_data <- read.csv("data/eco.csv")
head(eco_data)
zipsByProduct(
eco_data$datatest[5],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
zipsByProduct(
eco_data$datatest[4],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
?byTileAOP
# Tabular Datasets
x <- zipsByProduct(
eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
# Remote Sensing Products
byTileAOP(
dpID = eco_data$datatest[5],
site = "NIWO",
year = ,
buffer = 0,
check.size = TRUE,
savepath = path.data,
token = NA_character_
)
# Remote Sensing Products
byTileAOP(
dpID = eco_data$datatest[5],
site = "NIWO",
year = 2018,
check.size = TRUE,
savepath = path.data,
token = NA_character_
)
# Remote Sensing Products
byTileAOP(
dpID = eco_data$datatest[5],
site = "RMNP",
year = 2018,
check.size = TRUE,
savepath = path.data,
token = NA_character_
)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
################################################################################
# Data Pathway
################################################################################
path.data <- "data/catalog"
# view catalog
list.files(path.data)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "expanded",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = NA_character_,
avg = NA
)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = F,
token = "birds",
avg = NA
)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[1],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = T,
token = NA_character_,
avg = NA
)
# view catalog
list.files(path.data, "filesToStack10003")
mapply(unzip, zipfile = "data/catalog/filesToStack10003/NEON.D13.NIWO.DP1.10003.001.2020-07.basic.20230127T120753Z.RELEASE-2023.zip",
exdir = path.data)
list.files("data/catalog/filesToStack10003")
list.files(path.data)
mapply(unzip, zipfile = path.data[1],
exdir = path.data)
mapply(unzip, zipfile = path.data[1,],
exdir = path.data)
path.data[1,]
path.data[1]
path.data[[1]]
path.data[[2]]
path.data[,1]
path.data[1,]
path.data[[1]]
path.data[[2]]
list.files(path.data)
x <- list.files(path.data)
x
x[1]
# view catalog
mapply(unzip, zipfile = x[1],
exdir = path.data)
# view catalog
mapply(unzip, zipfile = x[1],
exdir = path.data,
overwrite = T)
# view catalog
mapply(unzip, zipfile = x[1],
exdir = path.data,
list = T)
# view catalog
mapply(unzip, zipfile = x[2],
exdir = path.data,
list = T)
# view catalog
mapply(unzip, zipfile = x[2],
exdir = path.data,
list = T,
overwrite = T)
# view catalog
mapply(unzip, zipfile = "x[2]",
exdir = path.data,
list = T,
overwrite = T)
list.files(path.data)
# view catalog
mapply(unzip, zipfile = "filesToStack00200",
exdir = path.data,
list = T,
overwrite = T)
################################################################################
# Data Pathway
################################################################################
path.data <- "data/catalog"
# load catalog
eco_data <- read.csv("data/eco.csv")
head(eco_data)
head(eco_data)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[5],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = T,
token = NA_character_,
avg = NA
)
#install.packages("pacman")
pacman::p_load(neonUtilities, neonOS, tidyverse, sf, terra, data.table)
################################################################################
# Data Pathway
################################################################################
path.data <- "data/catalog"
# load catalog
eco_data <- read.csv("data/eco.csv")
head(eco_data)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[5],
site = "NIWO",
startdate = NA,
enddate = NA,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = T,
token = NA_character_,
avg = NA
)
?zipsByProduct
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[5],
site = "NIWO",
startdate = 2021-01,
enddate = 2021-12,
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = T,
token = NA_character_,
avg = NA
)
# Tabular Datasets
zipsByProduct(
dpID = eco_data$datatest[5],
site = "NIWO",
startdate = "2021-01",
enddate = "2021-12",
package = "basic",
release = "current",
timeIndex = "all",
tabl = "all",
check.size = TRUE,
savepath = path.data,
load = T,
token = NA_character_,
avg = NA
)
knitr::opts_chunk$set(echo = TRUE)
mpg
iris
